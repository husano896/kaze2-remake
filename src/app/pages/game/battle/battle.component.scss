:host {
    display: block;
    width: 100%;
    height: 100%;
    background-image: url(/assets/imgs/bg_ryu.jpg);
    background-size: cover;
    background-position: bottom;
    overflow: hidden;
    color: white;
    padding: 0px 0px 16px 0px;
    box-sizing: border-box;
    color: white;
}

.health-bar {
    /** 範圍 0~100 */
    --var-health: 100;
    min-width: 128px;
    max-width: min(25vw, 25vh);
    width: 100%;
    max-height: 8px;
    border: 1px solid black;
    background: gray;
    overflow: hidden;

    .progress-bar {
        transition: 1s ease-in-out;
        display: list-item;
        width: calc(1% * var(--var-health));
        height: 100%;
        background: linear-gradient(90deg, #336633 0%, #66bb6a 75%) no-repeat;
        filter: hue-rotate(calc(1deg * var(--var-health) - 100deg)) saturate(calc(1 + calc((100 - var(--var-health))*0.04)));
    }
}

.health-bar.reverse {
    display: flex;
    flex-direction: row;
    justify-content: flex-end;
}

.health-bar.danger {
    border: 1px solid red;
}

div#bg {
    contain: content;
    height: 100%;
    text-align: center;
    align-items: center;
    background-size: cover;
    background-position: bottom;
    justify-content: center;
}

img#dragoncg.enter {
    animation: 1s slideInLeft cubic-bezier(0.075, 0.82, 0.165, 1);
}


span#continue-icon {
    position: absolute;
    right: calc(var(--var-base-font-size));
    bottom: 32px;
    animation: 1s blinking ease-out infinite;
    visibility: hidden;
}

span#continue-icon.waiting {
    visibility: visible;
}

@keyframes slideInLeft {
    0% {
        transform: translateX(-100%);
    }

    to {
        transform: translateX(0);
    }
}

div#Ray1 {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    width: 100%;
}

div#RayEX1 button {
    width: 100%;
    height: 5dvh;
    background: #333333;
    color: white;
    font-weight: 800;
    aspect-ratio: 1;

}

div#Command {
    position: absolute;
    width: 100%;
    height: 100%;
    opacity: 1;
    display: flex;
    flex-direction: row;
    box-sizing: border-box;
    gap: min(1vh, 1vw);
    padding: 5%;
    top: 0;
    left: 0;
    pointer-events: none;
    opacity: 0;

    div.flex-column {
        margin: min(1vh, 1vw) 0;

        gap: min(1vh, 1vw);
    }

    button {
        width: 100%;
        height: 100%;
    }

    button.selected {
        filter: brightness(1.25);
    }

    transition: 0.3s ease-out;
}

div#Command.waiting {
    opacity: 1;
    pointer-events: initial;
}

div#dialog {
    transition: 0.25s ease-out;
    filter: brightness(1);
    width: 100%;
    overflow: auto;
    white-space: pre-line;
    opacity: 0;
    pointer-events: none;
}

div#dialog:active {
    filter: brightness(0.9);
}

div#dialog.waiting {
    opacity: 1;
    pointer-events: all;
}

.damage-text {
    opacity: 0;
    animation: damageText 1.25s ease-out;
    filter: drop-shadow(0px 4px 2px #111111);
    position: absolute;
    width: 100%;
    height: 100%;
    display: flex;
    top: 0;
    pointer-events: none;
    text-shadow:
        2px 2px 1px black,
        -2px 2px 1px black,
        -2px -2px 0 black,
        2px -2px 0 black;
}

@keyframes damageText {

    0%,
    75% {
        opacity: 1;
    }

    0% {
        transform: scale(1.25);
    }

    25% {
        transform: scale(1);
    }

    to {
        opacity: 0;
    }
}


@keyframes playerDamagedAnim {
    0% {
        transform: scale(1);
        background-color: rgba(229, 0, 0, 0.5);
    }

    5% {
        transform: scale(calc(1 + max(0.05, min(calc(var(--var-damage-percent)*0.15), 0.1))));
    }

    to {
        transform: scale(1);
        background-color: rgba(0, 0, 0, 0);
    }
}

div#playerCommand.damaged {
    transform-origin: top center;
    animation: min(3s, calc(1s * (1 + var(--var-damage-percent)))) ease-out enemyDamagedAnim;
    overflow: hidden;
}

img#dragoncg.damaged {
    transform-origin: bottom center;
    background-blend-mode: color;
    animation: 1s ease-out enemyDamagedAnim;
    overflow: hidden;
}

@keyframes enemyDamagedAnim {
    0% {
        transform: scale(1);
        opacity: 0
    }

    5% {
        transform: scale(calc(1 + max(0.05, min(calc(var(--var-damage-percent)*0.15), 0.1))));
        opacity: 1;
    }

    to {
        transform: scale(1);
    }
}